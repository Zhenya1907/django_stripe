upstream innerdjango {
    server django-backend:8000;
    # connection to the inner django-backend service
    # here `django-backend` is the service's name in
    # docker-compose.yml, it is resolved by docker to inner IP address.
    # The `innerdjango` is just te name of upstream, used by nginx below. 
}
server {
    # the connection to the outside world
    # will be changed to incorporate cert's bot and ssl
    # just to test it localy for now
    listen 80; # port exposed to outside world. Needs to be opened in docker-compose.yml
    server_name lihvin.com;
    location / {
        # where to redirect `/` requests
        # to inner `innerdjango` upstream
        return 301 https://$host$request_uri;
        #  proxy_pass http://innerdjango;
    }
    location /.well-known/acme-challenge/ { # <-- this section
        # let's encrypt asks for this location and needs to get the response from /var/www/certbot
        # generated by certbot and available to nginx via volumes
        root /var/www/certbot;
    }
}
server {
    # new server, but for ssl (443 port)
    listen 443 ssl; # listen 443 port
    server_name lihvin.com;
    # dont forget to adjust django-deploy.tk to your domain
    ssl_certificate /etc/letsencrypt/live/lihvin.com/fullchain.pem; # <-this
    ssl_certificate_key /etc/letsencrypt/live/lihvin.com/privkey.pem; # <-this
    location / {
        proxy_pass http://innerdjango; # pass these requests to internal upstream
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto https;
    }
    location /static/ {
        root /var/www;
    }
    location /media/ {
        root /var/www;
    }
}
